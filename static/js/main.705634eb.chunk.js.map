{"version":3,"sources":["Redux/Constants/UIConstants.ts","Redux/Actions/UIActions.ts","Redux/Constants/UserConstants.ts","Redux/Actions/UserActions.ts","Components/LoginWithGoogle/LoginWithGoogle.tsx","Components/MainAppBar/MainAppBar.tsx","Components/AddFab/AddFab.tsx","Components/NavDrawer/NavDrawer.tsx","Components/Dialogs/CreateCategory/CreateCategory.tsx","Components/Dialogs/CreateEntry/CreateEntry.tsx","Security/PasswordGenerator.ts","Components/Dialogs/Dialogs.tsx","Components/Navigator/Navigator.tsx","Components/AlertSnackbar/AlertSnackbar.tsx","Components/ProgressCircle/ProgressCircle.tsx","Hooks/useTimeout.ts","Components/App.tsx","reportWebVitals.ts","Redux/Reducers/UserReducer.ts","Redux/Reducers/UIReducer.ts","Redux/Reducers/index.ts","Redux/store.ts","index.tsx"],"names":["AlertStatus","UIConstants","UIActions","status","message","type","UserConstants","UserActions","data","google_token","GoogleLoginProps","clientId","cookiePolicy","redirectUri","scope","isSignedIn","onSuccess","response","dispatch","success","onFailure","console","error","LoginWithGoogle","useDispatch","Logout","onLogoutSuccess","buttonText","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","MainAppBar","state","useSelector","User","userData","IconButton","size","edge","Avatar","alt","profileObj","name","src","imageUrl","sx","Box","AppBar","zIndex","drawer","Toolbar","Typography","variant","noWrap","component","placeholder","inputProps","flexGrow","xs","md","AddFab","React","useState","open","setOpen","handleClose","actions","icon","onClick","SpeedDial","ariaLabel","bottom","right","SpeedDialIcon","onClose","onOpen","map","action","SpeedDialAction","tooltipTitle","NavDrawer","selectedIndex","setIndex","log","Drawer","flexShrink","boxSizing","overflow","List","key","primary","category","ListItem","button","event","newKey","ListItemIcon","ListItemText","Divider","CreateCategory","props","useTheme","fullScreen","useMediaQuery","down","Dialog","isOpen","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","initialState","username","password","passwordStrength","lowercase","uppercase","number","symbol","value","CreateEntry","values","setValues","handleChange","changeEvent","target","checkPassword","pwStrength","minDiversity","minLength","checkPasswordStrength","pwst","contains","forEach","FormControl","fullWidth","InputLabel","htmlFor","Input","onChange","endAdornment","InputAdornment","align","minWidth","length","generatedPW","generator","generate","strict","generatePassword","prevState","FormControlLabel","disabled","control","Checkbox","checked","label","Dialogs","UI","NewCategory","NewEntry","Navigator","CssBaseline","p","paragraph","Alert","forwardRef","ref","elevation","displayName","AlertSnackbar","reason","Fragment","fontSize","Snackbar","TransitionComponent","Slide","autoHideDuration","delay","anchorOrigin","vertical","horizontal","severity","GlobalAlertSnackbar","ProgressCircle","CircularProgress","useTimeout","callback","savedCallback","useRef","useLayoutEffect","current","useEffect","setTimeout","clearTimeout","AppLoadingContent","MainAppContent","App","events","useGoogleLogin","Object","assign","useLogin","loadingState","AppLoading","content","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","master_password","info","rootReducer","combineReducers","loggerMiddleware","createLogger","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.705634eb.chunk.js","sourcesContent":["export enum AlertStatus {\n  success = 'success',\n  info = 'info',\n  warning = 'warning',\n  error = 'error'\n}\n\nexport const UIConstants = {\n  END_APP_LOADING: 'END_APP_LOADING',\n  ADD_ALERT: 'ADD_ALERT',\n  OPEN_NEW_ENTRY_DIALOG: 'OPEN_NEW_ENTRY_DIALOG',\n  OPEN_NEW_CATEGORY_DIALOG: 'OPEN_NEW_CATEGORY_DIALOG',\n  CLOSE_DIALOG: 'CLOSE_DIALOG'\n}\n","import { Action, ActionCreator } from 'redux'\nimport { AlertStatus, UIConstants } from '../Constants/UIConstants'\n\nexport interface AlertAction extends Action {\n  message: string\n  status: AlertStatus\n}\n\nconst endAppLoading: ActionCreator<Action> = () => ({ type: UIConstants.END_APP_LOADING })\n\nconst addAlert: ActionCreator<AlertAction> = (status: AlertStatus, message: string) => ({\n  type: UIConstants.ADD_ALERT,\n  status,\n  message\n})\n\nconst openNewCategoryDialog: ActionCreator<Action> = () => ({ type: UIConstants.OPEN_NEW_CATEGORY_DIALOG })\nconst openNewEntryDialog: ActionCreator<Action> = () => ({ type: UIConstants.OPEN_NEW_ENTRY_DIALOG })\nconst closeAllDialogs: ActionCreator<Action> = () => ({ type: UIConstants.CLOSE_DIALOG })\n\nexport const UIActions = {\n  addAlert,\n  endAppLoading,\n  openNewCategoryDialog,\n  openNewEntryDialog,\n  closeAllDialogs\n}\n","export const UserConstants = {\n  GOOGLE_LOGIN_SUCCESS: 'GOOGLE_LOGIN_SUCCESS',\n  GOOGLE_LOGIN_ERROR: 'GOOGLE_LOGIN_ERROR',\n  MASTER_PASSWORD_SUCCESS: 'MASTER_PASSWORD_SUCCESS',\n  MASTER_PASSWORD_ERROR: 'MASTER_PASSWORD_ERROR',\n  CLEAR_MASTER_PASSWORD: 'CLEAR_MASTER_PASSWORD',\n  CLEAR: 'LOGOUT'\n}\n","import { Action, ActionCreator } from 'redux'\nimport { UserConstants } from '../Constants/UserConstants'\nimport { GoogleLoginResponse } from 'react-google-login'\n\nexport interface UserAction extends Action {\n  google_token?: GoogleLoginResponse\n  master_password?: string\n}\n\nconst google_login: ActionCreator<UserAction> = (data: GoogleLoginResponse) => {\n  return { type: UserConstants.GOOGLE_LOGIN_SUCCESS, google_token: data }\n}\n\nconst check_master_password: ActionCreator<UserAction> = () => {\n  // decrypt the settings file\n  return { type: UserConstants.MASTER_PASSWORD_SUCCESS, master_password: 'SOME MASTER PASSWORD' }\n}\n\nconst clear_master_password: ActionCreator<Action> = () => {\n  return { type: UserConstants.CLEAR_MASTER_PASSWORD }\n}\n\nconst clear: ActionCreator<Action> = () => {\n  return { type: UserConstants.CLEAR }\n}\n\nexport const UserActions = {\n  google_login,\n  check_master_password,\n  clear_master_password,\n  clear\n}\n","import React from 'react'\nimport { GoogleLogin, GoogleLoginResponse, GoogleLoginResponseOffline, GoogleLogout, useGoogleLogin, useGoogleLogout } from 'react-google-login'\nimport { useDispatch } from 'react-redux'\nimport { UIActions } from '../../Redux/Actions/UIActions'\nimport { UserActions } from '../../Redux/Actions/UserActions'\nimport { AlertStatus } from '../../Redux/Constants/UIConstants'\n\nconst GoogleLoginProps = {\n  clientId: '952024862678-rka3ij8bqmpr6qps23n72a7b72mjpkep.apps.googleusercontent.com',\n  cookiePolicy: 'single_host_origin',\n  redirectUri: 'http://localhost:3000/',\n  scope: 'https://www.googleapis.com/auth/drive.appdata',\n  isSignedIn: true\n}\n\nconst onSuccess = (response: GoogleLoginResponse | GoogleLoginResponseOffline, dispatch: (arg0: any) => void) => {\n  dispatch(UserActions.google_login(response))\n  dispatch(UIActions.addAlert(AlertStatus.success, 'Google Login Successful'))\n}\n\nconst onFailure = (response: GoogleLoginResponse, dispatch: (arg0: any) => void) => {\n  console.error(response)\n  dispatch(UIActions.addAlert(AlertStatus.error, 'Google Login Failed'))\n}\n\nexport const LoginWithGoogle = () => {\n  const dispatch = useDispatch()\n  return (\n    <div>\n      <GoogleLogin\n        {...GoogleLoginProps}\n        onSuccess={(response: GoogleLoginResponse | GoogleLoginResponseOffline) => (onSuccess(response, dispatch))}\n        onFailure={(response: GoogleLoginResponse) => (onFailure(response, dispatch))}\n      />\n    </div>\n  )\n}\n\nexport const useLogin = () => {\n  const dispatch = useDispatch()\n  const events = {\n    onSuccess: (response: GoogleLoginResponse | GoogleLoginResponseOffline) => (onSuccess(response, dispatch)),\n    onFailure: (response: GoogleLoginResponse) => (onFailure(response, dispatch))\n  }\n  return useGoogleLogin(Object.assign({}, GoogleLoginProps, events))\n}\n\nexport const useLogout = () => {\n  const dispatch = useDispatch()\n  const events = {\n    onLogoutSuccess: () => dispatch(UserActions.clear()),\n  }\n  return useGoogleLogout(Object.assign({}, GoogleLoginProps, events))\n}\n\nexport const Logout = () => {\n  const dispatch = useDispatch()\n  const onSuccess = () => {\n    dispatch(UserActions.clear())\n  }\n  return (\n    <div>\n      <GoogleLogout {...GoogleLoginProps} onLogoutSuccess={onSuccess} buttonText=\"Logout\" />\n    </div>\n  )\n}\n","import React from 'react';\nimport { styled, alpha } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputBase from '@mui/material/InputBase';\nimport SearchIcon from '@mui/icons-material/Search';\n// import GoogleIcon from '@mui/icons-material/Google';\n// import LogoutIcon from '@mui/icons-material/Logout';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/Reducers';\nimport Avatar from '@mui/material/Avatar';\nimport { LoginWithGoogle, Logout } from '../LoginWithGoogle/LoginWithGoogle';\n\nconst Search = styled('div')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(3),\n    width: 'auto',\n  },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n}));\n\nexport const MainAppBar = () => {\n  const state = useSelector((state: RootState) => state.User.google_token)\n\n  let userData = <>\n    <LoginWithGoogle />\n  </>\n\n  if (state) {\n    userData = <>\n      <Logout />\n      <IconButton size=\"large\" edge=\"end\" color=\"inherit\">\n        <Avatar alt={state.profileObj.name} src={state.profileObj.imageUrl} sx={{ width: 24, height: 24 }} />\n      </IconButton>\n    </>\n  }\n\n  return (\n    <Box>\n      <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            Google Drive Password Manager\n          </Typography>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase placeholder=\"Search…\" inputProps={{ 'aria-label': 'search' }} />\n          </Search>\n          <Box sx={{ flexGrow: 1 }} />\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n            {userData}\n          </Box>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { UIActions } from '../../Redux/Actions/UIActions'\nimport SpeedDial from '@mui/material/SpeedDial'\nimport SpeedDialIcon from '@mui/material/SpeedDialIcon'\nimport SpeedDialAction from '@mui/material/SpeedDialAction'\nimport ShortTextIcon from '@mui/icons-material/ShortText'\nimport FolderIcon from '@mui/icons-material/Folder'\n\nexport const AddFab = () => {\n  const [open, setOpen] = React.useState(false)\n  const dispatch = useDispatch()\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleNewEntry = () => {\n    dispatch(UIActions.openNewEntryDialog())\n    handleClose()\n  }\n\n  const handleNewCategory = () => {\n    dispatch(UIActions.openNewCategoryDialog())\n    handleClose()\n  }\n\n  const actions = [\n    { icon: <ShortTextIcon />, name: 'New Entry', onClick: handleNewEntry },\n    { icon: <FolderIcon />, name: 'New Category', onClick: handleNewCategory }\n  ]\n\n  return (\n    <SpeedDial\n      ariaLabel=\"Create ...\"\n      sx={{ position: 'absolute', bottom: 36, right: 36 }}\n      icon={<SpeedDialIcon />}\n      onClose={handleClose}\n      onOpen={handleOpen}\n      open={open}\n    >\n      {actions.map((action) => (\n        <SpeedDialAction\n          key={action.name}\n          icon={action.icon}\n          tooltipTitle={action.name}\n          onClick={action.onClick}\n        />\n      ))}\n    </SpeedDial>\n  )\n}","import React, { useState } from 'react'\nimport Drawer from '@mui/material/Drawer'\nimport List from '@mui/material/List'\nimport Divider from '@mui/material/Divider'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen'\nimport Toolbar from '@mui/material/Toolbar'\nimport Box from '@mui/material/Box'\n\nconst drawerWidth: number = 240\n\nexport const NavDrawer = () => {\n  const [selectedIndex, setIndex] = useState('Default')\n  const categories = [\n    { key: 'Default', primary: \"Default\" },\n    { key: 'test_cat', primary: \"Test Cat\" },\n    { key: 'test_cat_2', primary: \"Test Cat\" },\n    { key: 'test_cat_3', primary: \"Test Cat\" }\n  ]\n\n  const handleListItemClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>, newKey: string) => {\n    setIndex(newKey)\n    // Load 'newKey' category\n  }\n\n  console.log(selectedIndex)\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      sx={{\n        width: drawerWidth,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\n      }}\n    >\n      <Toolbar />\n      <Box sx={{ overflow: 'auto' }}>\n        <List>\n          {\n            categories.map((category) => {\n              return (\n                <ListItem button key={category.key} onClick={(event) => handleListItemClick(event, category.key)}>\n                  <ListItemIcon>\n                    {(selectedIndex === category.key) ? <FolderOpenIcon /> : <FolderIcon />}\n                  </ListItemIcon>\n                  <ListItemText primary={category.primary} />\n                </ListItem>\n              )\n            })\n          }\n        </List>\n        <Divider />\n      </Box>\n    </Drawer>\n  )\n}","import React from 'react'\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport useMediaQuery from '@mui/material/useMediaQuery'\nimport { useTheme } from '@mui/material/styles'\nimport { useDispatch } from 'react-redux'\nimport { UIActions } from '../../../Redux/Actions/UIActions'\n\nexport interface CreateCategoryProps {\n  isOpen: boolean\n}\n\nexport const CreateCategory = (props: CreateCategoryProps) => {\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const dispatch = useDispatch()\n\n  const handleClose = () => {\n    dispatch(UIActions.closeAllDialogs())\n  }\n\n  return (\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={props.isOpen}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {\"Use Google's location service?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means sending anonymous\n            location data to Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose}>\n            Disagree\n          </Button>\n          <Button onClick={handleClose} autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}","import React, { useState } from 'react'\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport useMediaQuery from '@mui/material/useMediaQuery'\nimport { useTheme } from '@mui/material/styles'\nimport { useDispatch } from 'react-redux'\nimport { UIActions } from '../../../Redux/Actions/UIActions'\nimport IconButton from '@mui/material/IconButton'\nimport AutorenewIcon from '@mui/icons-material/Autorenew'\nimport FormControl from '@mui/material/FormControl'\nimport InputLabel from '@mui/material/InputLabel'\nimport Input from '@mui/material/Input'\nimport InputAdornment from '@mui/material/InputAdornment'\nimport { checkPasswordStrength, generatePassword } from '../../../Security/PasswordGenerator'\nimport Box from '@mui/material/Box'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Checkbox from '@mui/material/Checkbox'\nimport Typography from '@mui/material/Typography'\n\nexport interface CreateEntryProps {\n  isOpen: boolean\n}\n\ninterface CreateEntryState {\n  username: string\n  password: string\n  passwordStrength: { lowercase: boolean, uppercase: boolean, number: boolean, symbol: boolean, value: string }\n}\n\nconst initialState = { username: '', password: '', passwordStrength: { lowercase: false, uppercase: false, number: false, symbol: false, value: '' } }\n\nexport const CreateEntry = (props: CreateEntryProps) => {\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const dispatch = useDispatch()\n  const [values, setValues] = useState<CreateEntryState>(initialState)\n\n  const handleChange = (changeEvent: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({\n      ...values,\n      [changeEvent.target.id]: changeEvent.target.value\n    })\n\n    if (changeEvent.target.id === 'password') {\n      checkPassword(changeEvent.target.value)\n    }\n  }\n\n  const checkPassword = (password: string) => {\n    const pwStrength = checkPasswordStrength(password)\n    const pwst = { ...initialState.passwordStrength }\n\n    pwStrength.contains.forEach((value) => {\n      pwst[value] = true\n    })\n\n    pwst.value = pwStrength.value\n    setValues((state) => ({\n      ...state,\n      passwordStrength: pwst\n    }))\n  }\n\n  const handleClose = () => {\n    setValues(() => initialState)\n    dispatch(UIActions.closeAllDialogs())\n  }\n\n  const handleCreateAndClose = () => {\n    // Create\n    handleClose()\n  }\n\n  const generatePasswd = () => {\n    const generatedPW = generatePassword()\n    setValues((prevState: CreateEntryState) => ({\n      ...prevState,\n      password: generatedPW\n    }))\n    checkPassword(generatedPW)\n  }\n\n  return (\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={props.isOpen}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {\"Create A New Entry\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Create a new entry\n          </DialogContentText>\n          <FormControl variant=\"standard\" fullWidth>\n            <InputLabel htmlFor=\"username\">Username</InputLabel>\n            <Input\n              id=\"username\"\n              type='text'\n              value={values.username}\n              onChange={handleChange}\n            />\n          </FormControl>\n          <FormControl variant=\"standard\" fullWidth>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input\n              id=\"password\"\n              type='text'\n              value={values.password}\n              onChange={handleChange}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <Typography align='right' minWidth={'5ch'}>{values.password.length}</Typography>\n                  <IconButton\n                    aria-label=\"generate a new password\"\n                    onClick={generatePasswd}\n                  >\n                    <AutorenewIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n          <Box>\n            <FormControlLabel disabled control={<Checkbox checked={values.passwordStrength.lowercase} />} label=\"Lowercase\" />\n            <FormControlLabel disabled control={<Checkbox checked={values.passwordStrength.uppercase} />} label=\"Uppercase\" />\n            <FormControlLabel disabled control={<Checkbox checked={values.passwordStrength.number} />} label=\"Number\" />\n            <FormControlLabel disabled control={<Checkbox checked={values.passwordStrength.symbol} />} label=\"Symbol\" />\n          </Box>\n          <Box>\n            <Typography>\n              {values.passwordStrength.value}\n            </Typography>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button onClick={handleCreateAndClose} autoFocus>\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}","import generator from 'generate-password'\nimport { passwordStrength, Options } from 'check-password-strength'\n\nexport interface PasswordGeneratorProps {\n  length?: number\n  numbers?: boolean\n  symbols?: boolean | string\n  lowercase?: boolean\n  uppercase?: boolean\n  excludeSimilarCharacters?: boolean\n  exclude?: string\n}\n\nexport const generatePassword = (props?: PasswordGeneratorProps) => {\n  return generator.generate({\n    ...props,\n    strict: true\n  })\n}\n\nexport const checkPasswordStrength = (password: string) => {\n  const strengthOptions: Options<string> = [\n    {\n      id: 0,\n      value: \"Too weak\",\n      minDiversity: 0,\n      minLength: 0\n    },\n    {\n      id: 1,\n      value: \"Weak\",\n      minDiversity: 2,\n      minLength: 6\n    },\n    {\n      id: 2,\n      value: \"Medium\",\n      minDiversity: 3,\n      minLength: 12\n    },\n    {\n      id: 3,\n      value: \"Strong\",\n      minDiversity: 4,\n      minLength: 16\n    },\n    {\n      id: 4,\n      value: \"Very Strong\",\n      minDiversity: 4,\n      minLength: 32\n    },\n    {\n      id: 5,\n      value: \"Very Strong\",\n      minDiversity: 3,\n      minLength: 36\n    }\n  ]\n\n  return passwordStrength(password, strengthOptions)\n}","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../Redux/Reducers'\nimport { CreateCategory } from './CreateCategory/CreateCategory'\nimport { CreateEntry } from './CreateEntry/CreateEntry'\n\nexport const Dialogs = () => {\n  const state = useSelector((state: RootState) => state.UI.Dialog)\n\n  return (\n    <>\n      <CreateCategory isOpen={state.NewCategory} />\n      <CreateEntry isOpen={state.NewEntry} />\n    </>\n  )\n}","import React from 'react'\nimport Box from '@mui/material/Box'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport { MainAppBar } from '../MainAppBar/MainAppBar'\nimport { AddFab } from '../AddFab/AddFab'\nimport { NavDrawer } from '../NavDrawer/NavDrawer'\nimport { Dialogs } from '../Dialogs/Dialogs'\n\nexport const Navigator = () => {\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <Dialogs />\n      <CssBaseline />\n      <MainAppBar />\n      <NavDrawer />\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n        <Toolbar />\n        <div>\n          <Typography paragraph>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n            tempor incididunt ut labore et dolore magna aliqua.\n          </Typography>\n          <Typography paragraph>\n            Consequat mauris nunc congue nisi vitae suscipit.\n          </Typography>\n          <AddFab />\n        </div>\n      </Box>\n    </Box>\n  )\n}","import React from 'react'\nimport Slide from '@mui/material/Slide'\nimport Snackbar from '@mui/material/Snackbar'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport MuiAlert, { AlertProps } from '@mui/material/Alert'\nimport { RootState } from '../../Redux/Reducers/index'\nimport { useSelector } from 'react-redux'\nimport { AlertStatus } from '../../Redux/Constants/UIConstants'\n\nexport interface AlertSnackbarProps {\n  message: string\n  status: AlertStatus\n  delay?: number\n}\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>((props, ref) => {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />\n})\n\nAlert.displayName = 'Alert'\n\nexport const AlertSnackbar = (props: AlertSnackbarProps) => {\n  const [open, setOpen] = React.useState(true)\n\n  const handleClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setOpen(false)\n  }\n\n  const action = (\n    <React.Fragment>\n      <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  )\n\n  return (\n    <Snackbar\n      open={open}\n      TransitionComponent={Slide}\n      autoHideDuration={props.delay || 3000}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      onClose={handleClose}\n      action={action}\n    >\n      <Alert onClose={handleClose} severity={props.status} sx={{ width: '100%' }}>\n        {props.message}\n      </Alert>\n    </Snackbar>\n  )\n}\n\nexport const GlobalAlertSnackbar = () => {\n  const state = useSelector((state: RootState) => state.UI.Snackbar)\n  if (state.message !== '') {\n    return <AlertSnackbar message={state.message} status={state.status} />\n  }\n  return <></>\n}\n","import React from 'react'\nimport CircularProgress from '@mui/material/CircularProgress';\n\nexport const ProgressCircle = () => {\n  return <CircularProgress />\n}","import { useEffect, useLayoutEffect, useRef } from 'react'\n\nfunction useTimeout(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(callback)\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  useEffect(() => {\n    if (!delay) {\n      return\n    }\n\n    const id = setTimeout(() => savedCallback.current(), delay)\n\n    return () => clearTimeout(id)\n  }, [delay])\n}\n\nexport default useTimeout\n","import React from 'react'\nimport { Navigator } from './Navigator/Navigator'\nimport { GlobalAlertSnackbar } from './AlertSnackbar/AlertSnackbar'\nimport { ProgressCircle } from './ProgressCircle/ProgressCircle'\nimport useTimeout from '../Hooks/useTimeout'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UIActions } from '../Redux/Actions/UIActions'\nimport { RootState } from '../Redux/Reducers'\nimport { useLogin } from './LoginWithGoogle/LoginWithGoogle'\n\nconst AppLoadingContent = () => {\n  return (\n    <>\n      <ProgressCircle />\n    </>\n  )\n}\n\nconst MainAppContent = () => {\n  return (\n    <>\n      <Navigator />\n    </>\n  )\n}\n\nconst App = () => {\n  const dispatch = useDispatch()\n  useLogin()\n  useTimeout(() => {\n    dispatch(UIActions.endAppLoading())\n  }, 3000)\n\n  const loadingState = useSelector((state: RootState) => state.UI.AppLoading)\n\n  let content = <AppLoadingContent />\n  if (!loadingState) {\n    content = <MainAppContent />\n  }\n\n  return (\n    <div className=\"App\">\n      <GlobalAlertSnackbar />\n      {content}\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Reducer } from 'redux'\nimport { UserAction } from '../Actions/UserActions'\nimport { UserConstants } from '../Constants/UserConstants'\nimport { GoogleLoginResponse } from 'react-google-login'\n\nexport interface UserState {\n  google_token: GoogleLoginResponse | null\n  master_password: string\n}\n\nconst initialState = {\n  google_token: null,\n  master_password: ''\n}\n\nexport const UserReducer: Reducer<UserState, UserAction> = (state = initialState, action: UserAction) => {\n  switch (action.type) {\n    case UserConstants.GOOGLE_LOGIN_SUCCESS:\n      return {\n        ...state,\n        google_token: action.google_token || null\n      }\n    case UserConstants.GOOGLE_LOGIN_ERROR:\n      return {\n        ...state,\n        google_token: null\n      }\n    case UserConstants.MASTER_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        master_password: action.master_password || 'No Password'\n      }\n    case UserConstants.MASTER_PASSWORD_ERROR:\n      return {\n        ...state,\n        master_password: ''\n      }\n    case UserConstants.CLEAR_MASTER_PASSWORD:\n      return {\n        ...state,\n        master_password: ''\n      }\n    case UserConstants.CLEAR:\n      return initialState\n    default:\n      return state\n  }\n}\n","import { Reducer } from 'redux'\nimport { AlertAction } from '../Actions/UIActions'\nimport { AlertStatus, UIConstants } from '../Constants/UIConstants'\n\nexport interface UIState {\n  AppLoading: boolean\n  Dialog: { NewEntry: boolean, NewCategory: boolean }\n  Snackbar: { message: string, status: AlertStatus }\n}\n\nconst initialState = {\n  AppLoading: true,\n  Dialog: { NewEntry: false, NewCategory: false },\n  Snackbar: { message: '', status: AlertStatus.info }\n}\n\nexport const UIReducer: Reducer<UIState, AlertAction> = (state = initialState, action: AlertAction) => {\n  switch (action.type) {\n    case UIConstants.ADD_ALERT:\n      return {\n        ...state,\n        Snackbar: {\n          message: action.message,\n          status: action.status\n        }\n      }\n    case UIConstants.END_APP_LOADING:\n      return {\n        ...state,\n        AppLoading: false\n      }\n    case UIConstants.OPEN_NEW_CATEGORY_DIALOG:\n      return {\n        ...state,\n        Dialog: {\n          NewEntry: false,\n          NewCategory: true\n        }\n      }\n    case UIConstants.OPEN_NEW_ENTRY_DIALOG:\n      return {\n        ...state,\n        Dialog: {\n          NewEntry: true,\n          NewCategory: false\n        }\n      }\n    case UIConstants.CLOSE_DIALOG:\n      return {\n        ...state,\n        Dialog: {\n          NewEntry: false,\n          NewCategory: false\n        }\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { UserReducer, UserState } from './UserReducer'\nimport { UIReducer, UIState } from './UIReducer'\n\nexport interface RootState {\n  UI: UIState\n  User: UserState\n}\n\nconst rootReducer = combineReducers<RootState>({\n  UI: UIReducer,\n  User: UserReducer\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './Reducers'\n\nconst loggerMiddleware = createLogger()\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(loggerMiddleware)))\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './Redux/store'\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}